stages:
- name: Build--build and push docker image
  steps:
  - env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: 'true'
      PLUGIN_INSECURE: 'true'
      PLUGIN_MIRROR: https://harbor-demo.iiidevops.org
      PLUGIN_MTU: '1000'
    publishImageConfig:
      buildContext: .
      dockerfilePath: ./Dockerfile
      pushRemote: true
      registry: harbor-demo.iiidevops.org
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
    when:
      branch:
        include:
        - master
        - develop
  # 需要符合Rancher版本
  - runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify && 
        rancher kubectl delete configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env 
        --ignore-not-found=true && 
        rancher kubectl create configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env 
        --from-env-file=iiidevops/app.env && 
        rancher kubectl annotate configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env 
        iiidevops.org/project_name=${CICD_GIT_REPO_NAME} iiidevops.org/branch=${CICD_GIT_BRANCH} 
        iiidevops.org/commit_id=${CICD_GIT_COMMIT} iiidevops.org/type=appenv
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
  - runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify && 
        rancher kubectl config view > config && ls && cat config && 
        cp config /opt/config && export KUBECONFIG="/opt/config" && 
        kubectl config set-cluster iiidevops-k8s --insecure-skip-tls-verify=true &&
        cat /opt/config && cp /opt/config config-fix
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
- name: Create k8s Command env
  steps: 
  - runScriptConfig:
      image: alpine/helm:3.5.1
      shellScript: mv config-fix /opt/config && export KUBECONFIG="/opt/config" && 
        helm list -n ${CICD_GIT_REPO_NAME} && 
        helm upgrade --install --history-max 1 --timeout 3600 --wait --wait-for-jobs 
        --description "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx"
        --set git.branch=${CICD_GIT_BRANCH} --set git.commitID=${CICD_GIT_COMMIT} 
        --set git.repoName=${CICD_GIT_REPO_NAME} --set git.url=${CICD_GIT_URL}
        --set pipeline.sequence=${CICD_EXECUTION_SEQUENCE}
        --version 0.1.0 -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx

- name: Test--Checkmarx source code scan And Web deploy
  steps:
  - runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify && 
        rancher kubectl config view > config && ls && cat config && 
        rancher app upgrade --install --history-max 1 --timeout 3600 --wait --wait-for-jobs 
        --description "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx"
        --set git.branch=${CICD_GIT_BRANCH} --set git.commitID=${CICD_GIT_COMMIT} 
        --set git.repoName=${CICD_GIT_REPO_NAME} --set git.url=${CICD_GIT_URL}
        --set pipeline.sequence=${CICD_EXECUTION_SEQUENCE}
        --version 0.1.0 -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
  when:
    branch:
      include:
      - master
      - checkmarx

- name: Test--Checkmarx source code scan
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-checkmarx
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
      - checkmarx
- name: Deploy--Web
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        harbor.host: harbor-demo.iiidevops.org
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.imageTag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
        web.port: 5000
      catalogTemplate: cattle-global-data:iii-dev-charts3-web
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.5.0
    when:
      branch:
        include:
        - master
        - develop
- name: Deploy--Wait Web deployment
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
    when:
      branch:
        include:
        - master
- name: Test--Postman
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.deployName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
        web.port: 5000
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-postman
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-pm
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
- name: Test--Webinspect
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.deployName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-webinspect
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-wi
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
